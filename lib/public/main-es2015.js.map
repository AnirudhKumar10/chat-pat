{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/chat-box/chat-box.component.ts","./src/app/components/chat-box/chat-box.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/models/user.ts","./src/app/services/auth.service.ts","./src/app/services/chat.service.ts","./src/app/utility/alert/alert.component.ts","./src/app/utility/alert/alert.component.html","./src/app/utility/alert/alert.module.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatBoxComponent } from './components/chat-box/chat-box.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'chat/:id', component: ChatBoxComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\nexport const routingComps = [\n  HomeComponent,\n  DashboardComponent,\n  LoginComponent,\n  RegisterComponent,\n  ChatBoxComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComps } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AlertModule } from './utility/alert/alert.module';\n\n@NgModule({\n  declarations: [AppComponent, routingComps],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AlertModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ChatService } from 'src/app/services/chat.service';\nimport * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n})\nexport class ChatBoxComponent implements OnInit {\n  socket: SocketIOClient.Socket;\n  constructor(\n    private chat: ChatService,\n    private auth: AuthService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.socket = io.connect();\n    this.auth\n      .getuserbyid({ user_id: this.route.snapshot.params.id })\n      .subscribe(<Response>(data) => {\n        this.name = data.name;\n        this.reciver_id = data.id;\n        this.chat\n          .getMessages(this.reciver_id.toString(), {\n            sender_id: localStorage.getItem('usr_id'),\n          })\n          .subscribe(<Response>(data) => {\n            this.messages = data.msg;\n          });\n      });\n\n    this.socket.on(\"msg\", (data) => {\n      if(data.rcv_id === this.sender_id){\n        this.messages.push({\n          msg: data.msg,\n          sender_id: data.sender_id,\n          rcv_id: data.rcv_id\n        });\n      }\n    });\n  }\n\n  name = 'user';\n  sender_id = localStorage.getItem('usr_id');\n  reciver_id;\n  messages;\n  failed = false;\n\n  sendMessage(msg) {\n    this.messages.push({\n      msg: msg.value,\n      sender_id: this.sender_id,\n      rcv_id: this.reciver_id,\n    });\n    this.chat\n      .sendMessage({\n        msg: msg.value,\n        sender_id: this.sender_id,\n        rcv_id: this.reciver_id,\n      })\n      .subscribe(<Response>(data) => {\n        msg.value = '';\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-md-5 p-0\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        {{ name }}\n      </div>\n      <div class=\"card-body p-2\" style=\"height: 500px; overflow: scroll;\">\n        <ul>\n          <li *ngFor=\"let message of messages\">\n            <div\n              [ngClass]=\"message.sender_id == sender_id ? 'sender' : 'reciever'\"\n              class=\"px-2\"\n            >\n              <span style=\"font-size: 12px; display: block;\" >{{\n                message.sender_id != sender_id ? name : 'You'\n              }}</span>\n              <p>{{ message.msg }}</p>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"form-group\">\n          <textarea class=\"form-control\" #msg rows=\"2\"></textarea>\n        </div>\n        <span\n          ><button\n            class=\"btn btn-primary float-right\"\n            (click)=\"sendMessage(msg)\"\n            type=\"button\"\n          >\n            Send\n          </button></span\n        >\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.auth\n      .getallusers({ userid: localStorage.getItem('usr_id') })\n      .subscribe(<Response>(data) => {\n        this.users = data.users;\n      });\n  }\n\n  users: User[];\n\n  chatBox(id) {\n    this.router.navigate(['/chat/' + id]);\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-5\">\n    <div class=\"py-4\">\n      <h3>My Friends</h3>\n    </div>\n    <ul class=\"list-group\">\n      <li\n        *ngFor=\"let user of users\"\n        style=\"cursor: pointer;\"\n        class=\"list-group-item\"\n        (click)=\"chatBox(user.user_id)\"\n      >\n        {{ user.name }}\n      </li>\n    </ul>\n    <button class=\"btn btn-primary my-3\" style=\"width: 25%;\" (click)=\"logout()\">\n      Logout\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  loginRoute() {\n    this.router.navigate(['/login']);\n  }\n\n  registerRoute() {\n    this.router.navigate(['/register']);\n  }\n}\n","<div class=\"row\" style=\"margin: 1px; margin-top: 50px;\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-md-5\">\n    <div class=\"card\">\n      <div class=\"card-body text-center\">\n        <h3 class=\"card-title\">Chat Application</h3>\n        <img\n          src=\"https://img.icons8.com/nolan/256/telegram-app.png\"\n          class=\"img-fluid\"\n        />\n        <span style=\"display: block;\">\n          <button\n            class=\"btn btn-primary m-1\"\n            (click)=\"loginRoute()\"\n            style=\"width: 25%;\"\n            type=\"button\"\n          >\n            Login\n          </button>\n          <button\n            class=\"btn btn-outline-primary m-1\"\n            (click)=\"registerRoute()\"\n            style=\"width: 30%;\"\n            type=\"button\"\n          >\n            Register\n          </button>\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  userid;\n  password;\n\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  registerRoute() {\n    this.router.navigate(['/register']);\n  }\n\n  submit() {\n    console.log(\"LOGIN\")\n    this.auth.login({ userid: this.userid, password: this.password });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-5\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email or User id</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"userid\"\n          name=\"userid\"\n          placeholder=\"Enter Email or User Id\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          [(ngModel)]=\"password\"\n          name=\"password\"\n          placeholder=\"Enter Password\"\n        />\n      </div>\n      <button (click)=\"submit()\" style=\"width: 20%;\" class=\"btn btn-primary\">\n        Login\n      </button>\n      <a\n        class=\"text-primary p-4\"\n        style=\"cursor: pointer; display: block;\"\n        (click)=\"registerRoute()\"\n        >Dont have Account? Signup here</a\n      >\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  user = new User();\n  pswrd2;\n\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  loginRoute() {\n    this.router.navigate(['/login']);\n  }\n\n  submit() {\n    console.log(\"REGISTER\")\n    this.auth.register(this.user).subscribe(<Response>(data) => {\n      console.log(data);\n      this.router.navigate(['/login']);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-5\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Name</label>\n        <input\n          [(ngModel)]=\"user.name\"\n          name=\"user.name\"\n          type=\"email\"\n          class=\"form-control\"\n          placeholder=\"Enter your name\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">User Id</label>\n        <input\n          [(ngModel)]=\"user.user_id\"\n          name=\"user.user_id\"\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Enter User Id\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Enter your Email\"\n          [(ngModel)]=\"user.email\"\n          name=\"user.email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Enter a password\"\n          [(ngModel)]=\"user.password\"\n          name=\"user.password\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Confirm Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Confirm the password\"\n          [(ngModel)]=\"pswrd2\"\n          name=\"pswrd2\"\n        />\n        <span *ngIf=\"user.password!=pswrd2\" class=\"d-block text-danger py-1 small\"\n          >Password doesn't match.</span\n        >\n      </div>\n      <button style=\"width: 25%;\" (click)=\"submit()\" class=\"btn btn-primary\">\n        Register\n      </button>\n      <a\n        class=\"text-primary p-4\"\n        style=\"cursor: pointer; display: block;\"\n        (click)=\"loginRoute()\"\n        >Have a Account? Login here</a\n      >\n    </form>\n  </div>\n</div>\n","export class User {\n  _id: Object;\n  name: String;\n  user_id: String;\n  email: String;\n  password: String;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) {}\n\n  url = '/api/users';\n\n  login(user) {\n    this.http.post(this.url + '/login', user).subscribe(\n      <Response>(data) => {\n        localStorage.setItem('usr_token', data.token);\n        localStorage.setItem('usr_id', data._Id);\n        localStorage.setItem('name', data.name);\n        this.router.navigate(['/dashboard']);\n      },\n      (err) => {\n        //this.alert.show()\n      }\n    );\n  }\n\n  register(user) {\n    return this.http.post(this.url + '/register', user);\n  }\n\n  getallusers(id) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/', id, { headers: headers });\n  }\n\n  getuserbyid(id) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/id', id, { headers: headers });\n  }\n\n  isLoggedIn() {\n    if (localStorage.getItem('usr_token')) return true;\n    else return false;\n  }\n\n  logout() {\n    localStorage.removeItem('usr_id');\n    localStorage.removeItem('usr_token');\n    this.router.navigate(['/']);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  constructor(private http: HttpClient) {}\n\n  url = '/api/messages';\n\n  sendMessage(msg) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/', msg, { headers: headers });\n  }\n\n  getMessages(id, sender) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/' + id, sender, { headers: headers });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css'],\n})\nexport class AlertComponent {\n\n  constructor() {}\n\n  flag = false;\n\n  show(header, message) {\n    this.flag = false;\n    this.header = header;\n    this.message = message;\n  }\n\n  header;\n  message;\n\n  hide() {\n    this.flag = true;\n  }\n}\n","<div [hidden]=\"flag\" class=\"alert alert-dismissible alert-danger\" role=\"alert\">\n  <strong>{{ header }}</strong> {{ message }}\n  <button\n    (click)=\"hide()\"\n    type=\"button\"\n    class=\"close\"\n    data-dismiss=\"alert\"\n    aria-label=\"Close\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertComponent } from './alert.component';\n\n\n\n@NgModule({\n  declarations: [AlertComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [AlertComponent]\n})\nexport class AlertModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}