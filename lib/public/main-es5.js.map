{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-box/chat-box.component.ts","webpack:///src/app/components/chat-box/chat-box.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/models/user.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/chat.service.ts","webpack:///src/app/utility/alert/alert.component.ts","webpack:///src/app/utility/alert/alert.component.html","webpack:///src/app/utility/alert/alert.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","routingComps","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatBoxComponent","chat","auth","route","name","sender_id","localStorage","getItem","failed","socket","getuserbyid","user_id","snapshot","params","subscribe","data","reciver_id","getMessages","toString","messages","msg","on","rcv_id","push","value","sendMessage","DashboardComponent","router","getallusers","userid","users","navigate","logout","HomeComponent","isLoggedIn","loginRoute","registerRoute","LoginComponent","console","log","login","password","submit","RegisterComponent","user","register","User","AuthService","http","url","post","setItem","token","_Id","err","headers","append","removeItem","providedIn","ChatService","sender","AlertComponent","flag","header","message","hide","AlertModule","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatBoxComponent } from './components/chat-box/chat-box.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'chat/:id', component: ChatBoxComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\nexport const routingComps = [\n  HomeComponent,\n  DashboardComponent,\n  LoginComponent,\n  RegisterComponent,\n  ChatBoxComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComps } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AlertModule } from './utility/alert/alert.module';\n\n@NgModule({\n  declarations: [AppComponent, routingComps],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AlertModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ChatService } from 'src/app/services/chat.service';\nimport * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n})\nexport class ChatBoxComponent implements OnInit {\n  socket: SocketIOClient.Socket;\n  constructor(\n    private chat: ChatService,\n    private auth: AuthService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.socket = io.connect('http://localhost:4000/');\n    this.auth\n      .getuserbyid({ user_id: this.route.snapshot.params.id })\n      .subscribe(<Response>(data) => {\n        this.name = data.name;\n        this.reciver_id = data.id;\n        this.chat\n          .getMessages(this.reciver_id.toString(), {\n            sender_id: localStorage.getItem('usr_id'),\n          })\n          .subscribe(<Response>(data) => {\n            this.messages = data.msg;\n          });\n      });\n\n    this.socket.on(\"msg\", (data) => {\n      if(data.rcv_id === this.sender_id){\n        this.messages.push({\n          msg: data.msg,\n          sender_id: data.sender_id,\n          rcv_id: data.rcv_id\n        });\n      }\n    });\n  }\n\n  name = 'user';\n  sender_id = localStorage.getItem('usr_id');\n  reciver_id;\n  messages;\n  failed = false;\n\n  sendMessage(msg) {\n    this.messages.push({\n      msg: msg.value,\n      sender_id: this.sender_id,\n      rcv_id: this.reciver_id,\n    });\n    this.chat\n      .sendMessage({\n        msg: msg.value,\n        sender_id: this.sender_id,\n        rcv_id: this.reciver_id,\n      })\n      .subscribe(<Response>(data) => {\n        msg.value = '';\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-md-5 p-0\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        {{ name }}\n      </div>\n      <div class=\"card-body p-2\" style=\"height: 500px; overflow: scroll;\">\n        <ul>\n          <li *ngFor=\"let message of messages\">\n            <div\n              [ngClass]=\"message.sender_id == sender_id ? 'sender' : 'reciever'\"\n              class=\"px-2\"\n            >\n              <span style=\"font-size: 12px; display: block;\" >{{\n                message.sender_id != sender_id ? name : 'You'\n              }}</span>\n              <p>{{ message.msg }}</p>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"form-group\">\n          <textarea class=\"form-control\" #msg rows=\"2\"></textarea>\n        </div>\n        <span\n          ><button\n            class=\"btn btn-primary float-right\"\n            (click)=\"sendMessage(msg)\"\n            type=\"button\"\n          >\n            Send\n          </button></span\n        >\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.auth\n      .getallusers({ userid: localStorage.getItem('usr_id') })\n      .subscribe(<Response>(data) => {\n        this.users = data.users;\n      });\n  }\n\n  users: User[];\n\n  chatBox(id) {\n    this.router.navigate(['/chat/' + id]);\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-5\">\n    <div class=\"py-4\">\n      <h3>My Friends</h3>\n    </div>\n    <ul class=\"list-group\">\n      <li\n        *ngFor=\"let user of users\"\n        style=\"cursor: pointer;\"\n        class=\"list-group-item\"\n        (click)=\"chatBox(user.user_id)\"\n      >\n        {{ user.name }}\n      </li>\n    </ul>\n    <button class=\"btn btn-primary my-3\" style=\"width: 25%;\" (click)=\"logout()\">\n      Logout\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  loginRoute() {\n    this.router.navigate(['/login']);\n  }\n\n  registerRoute() {\n    this.router.navigate(['/register']);\n  }\n}\n","<div class=\"row\" style=\"margin: 1px; margin-top: 50px;\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-md-5\">\n    <div class=\"card\">\n      <div class=\"card-body text-center\">\n        <h3 class=\"card-title\">Chat Application</h3>\n        <img\n          src=\"https://img.icons8.com/nolan/256/telegram-app.png\"\n          class=\"img-fluid\"\n        />\n        <span style=\"display: block;\">\n          <button\n            class=\"btn btn-primary m-1\"\n            (click)=\"loginRoute()\"\n            style=\"width: 25%;\"\n            type=\"button\"\n          >\n            Login\n          </button>\n          <button\n            class=\"btn btn-outline-primary m-1\"\n            (click)=\"registerRoute()\"\n            style=\"width: 30%;\"\n            type=\"button\"\n          >\n            Register\n          </button>\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  userid;\n  password;\n\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  registerRoute() {\n    this.router.navigate(['/register']);\n  }\n\n  submit() {\n    console.log(\"LOGIN\")\n    this.auth.login({ userid: this.userid, password: this.password });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-5\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email or User id</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"userid\"\n          name=\"userid\"\n          placeholder=\"Enter Email or User Id\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          [(ngModel)]=\"password\"\n          name=\"password\"\n          placeholder=\"Enter Password\"\n        />\n      </div>\n      <button (click)=\"submit()\" style=\"width: 20%;\" class=\"btn btn-primary\">\n        Login\n      </button>\n      <a\n        class=\"text-primary p-4\"\n        style=\"cursor: pointer; display: block;\"\n        (click)=\"registerRoute()\"\n        >Dont have Account? Signup here</a\n      >\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  constructor(private router: Router, private auth: AuthService) {}\n\n  user = new User();\n  pswrd2;\n\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  loginRoute() {\n    this.router.navigate(['/login']);\n  }\n\n  submit() {\n    console.log(\"REGISTER\")\n    this.auth.register(this.user).subscribe(<Response>(data) => {\n      console.log(data);\n      this.router.navigate(['/login']);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 col-sm-12 m-auto p-5\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Name</label>\n        <input\n          [(ngModel)]=\"user.name\"\n          name=\"user.name\"\n          type=\"email\"\n          class=\"form-control\"\n          placeholder=\"Enter your name\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">User Id</label>\n        <input\n          [(ngModel)]=\"user.user_id\"\n          name=\"user.user_id\"\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Enter User Id\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Enter your Email\"\n          [(ngModel)]=\"user.email\"\n          name=\"user.email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Enter a password\"\n          [(ngModel)]=\"user.password\"\n          name=\"user.password\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Confirm Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Confirm the password\"\n          [(ngModel)]=\"pswrd2\"\n          name=\"pswrd2\"\n        />\n        <span *ngIf=\"user.password!=pswrd2\" class=\"d-block text-danger py-1 small\"\n          >Password doesn't match.</span\n        >\n      </div>\n      <button style=\"width: 25%;\" (click)=\"submit()\" class=\"btn btn-primary\">\n        Register\n      </button>\n      <a\n        class=\"text-primary p-4\"\n        style=\"cursor: pointer; display: block;\"\n        (click)=\"loginRoute()\"\n        >Have a Account? Login here</a\n      >\n    </form>\n  </div>\n</div>\n","export class User {\n  _id: Object;\n  name: String;\n  user_id: String;\n  email: String;\n  password: String;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) {}\n\n  url = '/api/users';\n\n  login(user) {\n    this.http.post(this.url + '/login', user).subscribe(\n      <Response>(data) => {\n        localStorage.setItem('usr_token', data.token);\n        localStorage.setItem('usr_id', data._Id);\n        localStorage.setItem('name', data.name);\n        this.router.navigate(['/dashboard']);\n      },\n      (err) => {\n        //this.alert.show()\n      }\n    );\n  }\n\n  register(user) {\n    return this.http.post(this.url + '/register', user);\n  }\n\n  getallusers(id) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/', id, { headers: headers });\n  }\n\n  getuserbyid(id) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/id', id, { headers: headers });\n  }\n\n  isLoggedIn() {\n    if (localStorage.getItem('usr_token')) return true;\n    else return false;\n  }\n\n  logout() {\n    localStorage.removeItem('usr_id');\n    localStorage.removeItem('usr_token');\n    this.router.navigate(['/']);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  constructor(private http: HttpClient) {}\n\n  url = '/api/messages';\n\n  sendMessage(msg) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/', msg, { headers: headers });\n  }\n\n  getMessages(id, sender) {\n    let headers = new HttpHeaders();\n    headers = headers\n      .append('content-type', 'application/json')\n      .append('authorization', localStorage.getItem('usr_token'));\n    return this.http.post(this.url + '/' + id, sender, { headers: headers });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css'],\n})\nexport class AlertComponent {\n\n  constructor() {}\n\n  flag = false;\n\n  show(header, message) {\n    this.flag = false;\n    this.header = header;\n    this.message = message;\n  }\n\n  header;\n  message;\n\n  hide() {\n    this.flag = true;\n  }\n}\n","<div [hidden]=\"flag\" class=\"alert alert-dismissible alert-danger\" role=\"alert\">\n  <strong>{{ header }}</strong> {{ message }}\n  <button\n    (click)=\"hide()\"\n    type=\"button\"\n    class=\"close\"\n    data-dismiss=\"alert\"\n    aria-label=\"Close\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertComponent } from './alert.component';\n\n\n\n@NgModule({\n  declarations: [AlertComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [AlertComponent]\n})\nexport class AlertModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}